import openpyxl
from openpyxl.styles import PatternFill

# Funzione per analizzare l'output della griglia e convertirlo in una lista di liste (matrice)
def parse_grid_from_output(output):
    grid = []
    # Rimuoviamo le linee che non contengono dati (la parte della "cornice")
    lines = output.split("\n")
    
    for line in lines:
        # Ignoriamo le linee che sono solo cornici (quelle che contengono solo '+' o '|')
        if "+" in line or "|" in line:
            if not any(char.isalnum() for char in line):  # Se la riga contiene solo '+' e '|'
                continue
        # Estrarre i valori tra i separatori "|"
        row = line.strip("|").split(" | ")
        if len(row) > 0 and any(cell.strip() for cell in row):  # Aggiungiamo solo le righe valide
            grid.append(row)
    return grid

# Funzione per scrivere la matrice su un file Excel
def write_grid_to_excel(grid, file_path):
    # Creiamo un nuovo workbook e selezioniamo il foglio di lavoro attivo
    wb = openpyxl.Workbook()
    ws = wb.active
    
    # Colore di riempimento per le celle con asterisco
    black_fill = PatternFill(start_color="000000", end_color="000000", fill_type="solid")
    
    # Scriviamo i dati nella griglia
    for row_index, row in enumerate(grid, start=1):
        for col_index, cell_value in enumerate(row, start=1):
            cell = ws.cell(row=row_index, column=col_index, value=cell_value)
            # Se il valore della cella è "*" (asterisco), coloriamola di nero
            if cell_value == "*":
                cell.fill = black_fill
    
    # Salviamo il file Excel
    wb.save(file_path)

# La griglia da incollare direttamente nel codice
grid_output = """
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | * | * | * | * | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | V | * | * | * | * | * | * | * | * | * | * | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * |   | * | * | I | * | * | C | * | * | * | * | * | * | * | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
|   |   |   | * | * | L | E | M | O | N | * | * | * | * | * | * | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | M | A | G | E | * | * | A | * | * | * | * | * | * | * | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | R | * | * | * | T | A | C | O | * | * | * | * | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | A | * | * | S | * | * | * | * | * | * | * | * | * | * | I | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | P | L | A | N | E | * | * | * | * | * | * | * | N | * | R | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * |   |   | E | * | * | A | * | * | * | * | * | * | * | N | E | P | A | L | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * |   | * | * | * | * | I | * | * | P | * | * | * | * | * | P | * | N | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * |   | * | * | * | * | L | E | M | O | N | * | * | * | * | A | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | L | * | P | * | M | E | L | O | N | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | P | O | O | L | * | * | V | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | A | * | * | I | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | S | N | A | I | L | * | S | K | I | S |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | E | * | R | * | * | * | I | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | E | * | R | * | * | * | I | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | E | * | R | * | * | * | I | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | * | * | A | * | * | * | S | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | * | * | N | A | I | L | S | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | * | N | * |   | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | * | E |   |   | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | * | P | * | * | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | R | A | I | N | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
| * | * | * | * | * | * | * | * | * | * | * | * | * | L | * | * | * | * | * | * | * |
+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+---+
"""

# Parsing dell'output per ottenere la matrice
grid = parse_grid_from_output(grid_output)

# Scriviamo la matrice su un file Excel
file_path = r"C:\Users\Utente\Desktop\Mondo\Giochi\CS50x Puzzle\Puzzle CS50 25\griglia_output.xlsx"  # Cambia il percorso del file
write_grid_to_excel(grid, file_path)

print(f"Il file Excel è stato creato: {file_path}")
